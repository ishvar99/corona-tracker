{"version":3,"sources":["Components/Cards/cards.module.css","Api/fetchData.js","Components/Cards/cards.jsx","Components/Charts/charts.jsx","Components/CountryPicker/countrypicker.jsx","App.js","index.js","App.module.css","Components/Charts/charts.module.css","Components/CountryPicker/countrypicker.module.css","images/covid19.jpg"],"names":["module","exports","fetchData","country","a","url","axios","get","response","data","confirmed","recovered","deaths","lastUpdate","modifiedData","Cards","props","fetchedData","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","classnames","card","infected","CardContent","Typography","color","gutterBottom","variant","end","value","duration","seperator","Date","toDateString","Charts","useState","dailyData","setDailyData","useEffect","then","map","res","total","reportDate","catch","err","console","log","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","CountryPicker","onCountryChangeHandler","fetchedCountries","setFetchedCountries","countries","name","FormControl","form","NativeSelect","onChange","e","target","i","key","App","state","setState","this","error","image","src","coronaImage","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49bc4989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__1Ce3i\",\"card\":\"cards_card__1q9nm\",\"infected\":\"cards_infected__2jjKI\",\"recovered\":\"cards_recovered__3aLrw\",\"deaths\":\"cards_deaths__9lW9v\"};","import axios from 'axios';\r\nconst fetchData=async (country)=>{\r\n    let url='https://covid19.mathdro.id/api';\r\n    if(country){\r\n      url=`${url}/countries/${country}`\r\n    }\r\n    try {\r\n      const response=await(axios.get(`${url}`));\r\n      const {data:{confirmed,recovered,deaths,lastUpdate}}=response;\r\n       const modifiedData={confirmed,recovered,deaths,lastUpdate}\r\n      return modifiedData;\r\n   \r\n    } catch (error) {\r\n      return null;\r\n    } \r\n  }\r\n\r\n  export default fetchData;","import React from 'react';\r\nimport {Grid,Card,CardContent,Typography} from '@material-ui/core'; \r\nimport classnames from 'classnames';\r\nimport CountUp from 'react-countup';\r\nimport styles from './cards.module.css'\r\nconst Cards=(props)=>{\r\n  const {fetchedData:{confirmed,recovered,deaths,lastUpdate}}=props;\r\n  if(!confirmed){\r\n    return 'Loading....'\r\n  }\r\n  return (\r\n         <div className={styles.container}>\r\n    <Grid container spacing={2} justify=\"center\">\r\n      <Grid item component={Card} xs={12} md={3} className={classnames(styles.card,styles.infected)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                Infected\r\n                </Typography> \r\n                <Typography variant=\"h5\"><CountUp end={confirmed.value} duration={2} seperator=\",\"/></Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>    \r\n                <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n        </CardContent>    \r\n      </Grid>\r\n      <Grid item component={Card} xs={12} md={3} className={classnames(styles.card,styles.recovered)}>\r\n      <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                Recovered\r\n                </Typography> \r\n                <Typography variant=\"h5\"><CountUp end={recovered.value} duration={2} seperator=\",\"/></Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>    \r\n                <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n        </CardContent>    \r\n      </Grid>\r\n      <Grid item component={Card} xs={12} md={3} className={classnames(styles.card,styles.deaths)}>\r\n      <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n                </Typography> \r\n      <Typography variant=\"h5\"><CountUp end={deaths.value} duration={2} seperator=\",\"/></Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>    \r\n                <Typography variant=\"body2\">Number of death cases of COVID-19</Typography>\r\n        </CardContent>    \r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  );\r\n          }\r\n\r\nexport default Cards;","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './charts.module.css';\r\nconst Charts=({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailyData,setDailyData]=useState([]);\r\n    useEffect(()=>{\r\n        axios.get('https://covid19.mathdro.id/api/daily')\r\n        .then((response)=>{\r\n        const modifiedData= response.data.map((res)=>{\r\n               return {confirmed:res.confirmed.total,deaths:res.deaths.total,reportDate:res.reportDate}\r\n            });\r\n            setDailyData(modifiedData);\r\n        }).catch((err)=>console.log(err))\r\n    },[])\r\n    const LineChart=()=>{\r\n        return dailyData.length>0?(\r\n           \r\n            <Line data={{\r\n                labels:dailyData.map(({reportDate})=>reportDate),\r\n                datasets:[\r\n                    {\r\n                        data:dailyData.map(({confirmed})=>confirmed),\r\n                        label:'Infected',\r\n                        borderColor:'#3333fff',\r\n                        fill:true\r\n                    },\r\n                    {\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                        label:'Deaths',\r\n                        borderColor:'red',\r\n                        backgroundColor:'rgba(255,0,0,0.5)',\r\n                        fill:true\r\n                    }\r\n                ]\r\n            }}/>\r\n        ):null\r\n    }\r\n    const BarChart=()=>{\r\n        console.log('Bar Chart rendered')\r\n        return confirmed?(<Bar data={{\r\n            labels:['infected','recovered','Deaths'],\r\n            datasets:[{\r\n                labels:'People',\r\n                backgroundColor:[\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)'\r\n                ],\r\n                data:[confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n        }} options={\r\n            {\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current State in ${country}`}\r\n            }\r\n        }/>):null\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n          { country!==''?<BarChart/>:<LineChart/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts;","import React ,{useEffect,useState} from 'react';\r\nimport axios from 'axios'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './countrypicker.module.css'\r\nconst CountryPicker=({onCountryChangeHandler})=>{\r\n   const [fetchedCountries,setFetchedCountries]=useState([]);\r\n    useEffect(()=>{\r\n        axios.get('https://covid19.mathdro.id/api/countries')\r\n        .then(({data})=>{\r\n            const modifiedData=data.countries.map((item)=>item.name);\r\n            setFetchedCountries(modifiedData)\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    },[])\r\n    return (\r\n           <FormControl className={styles.form}>\r\n               <NativeSelect onChange={(e)=>onCountryChangeHandler(e.target.value)}>\r\n                   <option value='global'>Global</option>\r\n                   {fetchedCountries.map((name,i)=><option key={i} value={name}>{name}</option>)}\r\n                   </NativeSelect>\r\n           </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component} from 'react';\nimport './App.module.css';\nimport fetchData from './Api/fetchData'\nimport {Cards,Charts,CountryPicker} from './Components/index'; \nimport styles from './App.module.css';\nimport coronaImage from './images/covid19.jpg';\nclass App extends Component {\n  state={\n    data:{},\n    country:''\n  }\n\n  async componentDidMount(){\n    console.log('called');\n      const fetchedData= await fetchData();\n      if(fetchedData)\n        this.setState({data:fetchedData});\n      else\n        this.setState({data:{error:'Failed to fetch data'}})\n  }\n  onCountryChangeHandler= async (country)=>{\n   if(country==='global'){\n    const fetchedData= await fetchData()\n     this.setState({data:fetchedData,country:''})\n     return;\n   }\n   const fetchedData= await(fetchData(country))\n   this.setState({data:fetchedData,country:country})\n}\nrender()\n  {\n    console.log('render');\n    const {data,country}=this.state;\n  return (\n    <div className={styles.container}>\n       <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n      <Cards fetchedData={data}/>\n      <CountryPicker onCountryChangeHandler={this.onCountryChangeHandler}/>\n      <Charts country={country} data={data}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1n8nQ\",\"image\":\"App_image__3s2iM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__327N4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"countrypicker_form__1vr2c\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d5049d72.jpg\";"],"sourceRoot":""}